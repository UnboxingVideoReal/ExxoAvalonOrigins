using Microsoft.Xna.Framework;using System;using System.Collections.Generic;using System.Linq;using System.Text;using System.Threading.Tasks;using Terraria;using Terraria.ModLoader;using Terraria.ID;namespace ExxoAvalonOrigins.Projectiles{	public class Miniaxe : ModProjectile	{		public override void SetStaticDefaults()		{			DisplayName.SetDefault("Miniaxe");		}		public override void SetDefaults()		{			Rectangle dims = ExxoAvalonOrigins.getDims("Projectiles/Miniaxe");			projectile.netImportant = true;			projectile.width = dims.Width * 34 / 52;			projectile.height = dims.Height * 34 / 52 / Main.projFrames[projectile.type];			projectile.aiStyle = -1;			projectile.friendly = true;			projectile.minion = true;			projectile.minionSlots = 0.333f;			projectile.penetrate = -1;			projectile.melee = true;			projectile.light = 0.6f;			projectile.ignoreWater = true;			projectile.tileCollide = false;		}		public override void AI()		{			if (Main.player[projectile.owner].dead)			{				Main.player[projectile.owner].GetModPlayer<ExxoAvalonOriginsModPlayer>().weaponMinion = false;			}			if (Main.player[projectile.owner].GetModPlayer<ExxoAvalonOriginsModPlayer>().weaponMinion)			{				projectile.timeLeft = 2;			}			if (projectile.active)			{				projectile.GetGlobalProjectile<ExxoAvalonOriginsGlobalProjectileInstance>().SetRot(projectile);			}			projectile.timeLeft = 100;			if (!Main.player[projectile.owner].active || Main.player[projectile.owner].dead)			{				projectile.Kill();				return;			}			projectile.GetGlobalProjectile<ExxoAvalonOriginsGlobalProjectileInstance>().Target(projectile);			if (!projectile.GetGlobalProjectile<ExxoAvalonOriginsGlobalProjectileInstance>().hasTarget && Vector2.Distance(projectile.Center, projectile.GetGlobalProjectile<ExxoAvalonOriginsGlobalProjectileInstance>().target.Center) < 100f)			{				projectile.ai = new float[2];				if (Main.myPlayer == projectile.owner)				{					projectile.netUpdate = true;				}				var num983 = projectile.GetGlobalProjectile<ExxoAvalonOriginsGlobalProjectileInstance>().rot;				ExxoAvalonOriginsGlobalProjectile.AIRotate(projectile, ref projectile.rotation, ref projectile.GetGlobalProjectile<ExxoAvalonOriginsGlobalProjectileInstance>().rot, Main.player[projectile.owner].Center + new Vector2(0f, Main.player[projectile.owner].gfxOffY), true, 70f, 50f, 0.012f, true);				projectile.rotation += -0.785f;				if (Main.netMode != 2 && (!projectile.GetGlobalProjectile<ExxoAvalonOriginsGlobalProjectileInstance>().rotate || projectile.GetGlobalProjectile<ExxoAvalonOriginsGlobalProjectileInstance>().lastRot != num983))				{					var num984 = (projectile.type == ModContent.ProjectileType<Miniaxe>()) ? 60 : ((projectile.type == ModContent.ProjectileType<Minibur>()) ? 15 : 65);					for (var num985 = 0; num985 < 16; num985++)					{						var num986 = Dust.NewDust(projectile.position, projectile.width, projectile.height, num984, 0f, 0f, 0, Color.White, 3f);						Main.dust[num986].noGravity = true;					}				}				projectile.GetGlobalProjectile<ExxoAvalonOriginsGlobalProjectileInstance>().rotate = true;				projectile.GetGlobalProjectile<ExxoAvalonOriginsGlobalProjectileInstance>().lastRot = projectile.GetGlobalProjectile<ExxoAvalonOriginsGlobalProjectileInstance>().rot;				return;			}			projectile.GetGlobalProjectile<ExxoAvalonOriginsGlobalProjectileInstance>().rotate = false;			var num987 = projectile.GetGlobalProjectile<ExxoAvalonOriginsGlobalProjectileInstance>().moveMax;			var num988 = Math.Abs(projectile.GetGlobalProjectile<ExxoAvalonOriginsGlobalProjectileInstance>().target.velocity.X) + Math.Abs(projectile.GetGlobalProjectile<ExxoAvalonOriginsGlobalProjectileInstance>().target.velocity.Y);			if (num988 > num987)			{				num987 = num988;			}			var num989 = Vector2.Distance(projectile.GetGlobalProjectile<ExxoAvalonOriginsGlobalProjectileInstance>().target.Center, projectile.Center);			var num990 = projectile.ai[0];			var rotTime = 35;			var rotScalar = 0.8f;			var num991 = 8.5f;			var num992 = 10.5f;			ExxoAvalonOriginsGlobalProjectile.AIWeapon(projectile, ref projectile.ai, ref projectile.rotation, projectile.GetGlobalProjectile<ExxoAvalonOriginsGlobalProjectileInstance>().target.Center, false, rotTime, projectile.GetGlobalProjectile<ExxoAvalonOriginsGlobalProjectileInstance>().moveTime, projectile.GetGlobalProjectile<ExxoAvalonOriginsGlobalProjectileInstance>().hasTarget ? num992 : num991, projectile.GetGlobalProjectile<ExxoAvalonOriginsGlobalProjectileInstance>().hasTarget ? (num987 + 0.1f) : num987, rotScalar);			if (num990 == 0f && projectile.ai[0] == 1f)			{				projectile.rotation += 0.785f;				projectile.GetGlobalProjectile<ExxoAvalonOriginsGlobalProjectileInstance>().moveTime = (int)Math.Max(10f, num989 / num992);			}		}	}}