using Microsoft.Xna.Framework;using System;using System.Collections.Generic;using System.Linq;using System.Text;using System.Threading.Tasks;using Terraria;using Terraria.ModLoader;using Terraria.ID;namespace ExxoAvalonOrigins.Projectiles{	public class AeonBeam2 : ModProjectile	{		public override void SetStaticDefaults()		{			DisplayName.SetDefault("Aeon Beam");		}		public override void SetDefaults()		{			Rectangle dims = ExxoAvalonOrigins.getDims("Projectiles/AeonBeam2");			projectile.width = dims.Width * 16 / 28;			projectile.height = dims.Height * 16 / 28 / Main.projFrames[projectile.type];			projectile.aiStyle = -1;			projectile.melee = true;			projectile.penetrate = 1;			projectile.light = 0.2f;			projectile.alpha = 255;			projectile.friendly = true;        }        public override void AI()        {            if (projectile.localAI[1] > 7f)            {                var num480 = Main.rand.Next(3);                if (num480 == 0)                {                    num480 = 15;                }                else if (num480 == 1)                {                    num480 = 57;                }                else                {                    num480 = 58;                }                var num481 = Dust.NewDust(new Vector2(projectile.position.X - projectile.velocity.X * 4f + 2f, projectile.position.Y + 2f - projectile.velocity.Y * 4f), 8, 8, num480, 0f, 0f, 100, default(Color), 1.25f);                Main.dust[num481].velocity *= 0.1f;            }            if (projectile.localAI[1] < 15f)            {                projectile.localAI[1] += 1f;            }            else            {                if (projectile.localAI[0] == 0f)                {                    projectile.scale -= 0.02f;                    projectile.alpha += 30;                    if (projectile.alpha >= 250)                    {                        projectile.alpha = 255;                        projectile.localAI[0] = 1f;                    }                }                else if (projectile.localAI[0] == 1f)                {                    projectile.scale += 0.02f;                    projectile.alpha -= 30;                    if (projectile.alpha <= 0)                    {                        projectile.alpha = 0;                        projectile.localAI[0] = 0f;                    }                }            }            if (projectile.ai[1] == 0f)            {                projectile.ai[1] = 1f;                Main.PlaySound(2, (int)projectile.position.X, (int)projectile.position.Y, 8);            }            else            {                projectile.rotation = (float)Math.Atan2(projectile.velocity.Y, projectile.velocity.X) + 0.785f;            }            if (projectile.velocity.Y > 16f)            {                projectile.velocity.Y = 16f;            }        }    }}